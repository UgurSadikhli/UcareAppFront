@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
<div class="page">
    @if (Navigation.Uri != Navigation.BaseUri)
    {
    <div class="sidebar">
        <NavMenu />
    </div>
    }
    <main style="background-color: #EEEEEE;">
        @if (Navigation.Uri != Navigation.BaseUri)
        {
        <div class="top-row px-4" style="background-color: #EEEEEE; box-shadow: 0 3px 3px rgba(0, 0, 0, 0.4); ">
            @if (isAuthenticated)
            {

                    <div style="display: flex; justify-content:space-between; height: 100%; width: 100%; align-items: center;">
                        <div style="display: flex; height: 100%; width: 100%; align-items: center; gap: 1px;">
                            <span>Hi, @userName</span>
                            @if(isAdmin){
                                <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="currentColor" class="bi bi-check-all" viewBox="1 0 20 27" color=blue>
                                  <path d="M10.067.87a2.89 2.89 0 0 0-4.134 0l-.622.638-.89-.011a2.89 2.89 0 0 0-2.924 2.924l.01.89-.636.622a2.89 2.89 0 0 0 0 4.134l.637.622-.011.89a2.89 2.89 0 0 0 2.924 2.924l.89-.01.622.636a2.89 2.89 0 0 0 4.134 0l.622-.637.89.011a2.89 2.89 0 0 0 2.924-2.924l-.01-.89.636-.622a2.89 2.89 0 0 0 0-4.134l-.637-.622.011-.89a2.89 2.89 0 0 0-2.924-2.924l-.89.01zm.287 5.984-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708.708"/>
                                </svg>
                            }
                        </div>
                        <button class="nav-link btn" style="color:blue" @onclick="Logout">Logout</button>
                    </div>

            }
            else
            {
                 <a href="login">Login</a>
                 <a href="register">Register</a>
            }
        </div>
        }
        <article class="content px-4" >
            @Body
        </article>
    </main>
</div>


@code {
    private bool isAuthenticated = false;
    private bool isAdmin = false;
    private string userName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "jwtToken");
        userName = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "name");
        if(await JSRuntime.InvokeAsync<string>("localStorage.getItem", "role") == "admin"){
            isAdmin=true;
        }
        isAuthenticated = !string.IsNullOrEmpty(token);
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "jwtToken");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "role");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "name");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "email");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "mapLng");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "mapLat");
        isAuthenticated = false; 
        await JSRuntime.InvokeVoidAsync("location.reload");

    }
}