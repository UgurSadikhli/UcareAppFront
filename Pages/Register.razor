@page "/register"
@inject HttpClient Http
@using System.Net.Http.Json
@using UcareAppFront.DTOs
@inject NavigationManager NavigationManager

<h3 class="text-center mb-4">Register</h3>

<div class="container d-flex justify-content-center " style="height:20em;">
    <div class="card p-4" style="max-width: 500px; width: 100%; border-radius: 15px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group position-relative mb-3">
                <i class="bi bi-person position-absolute top-50 start-0 translate-middle-y ms-3" style="font-size: 1.2rem; color: #6c757d;"></i>
                <label for="name" class="visually-hidden">Name</label>
                <InputText id="name" class="form-control ps-5" @bind-Value="registerModel.Name" placeholder="Name" />
                <ValidationMessage For="@(() => registerModel.Name)" />
            </div>

            <div class="form-group position-relative mb-3">
                <i class="bi bi-person-bounding-box position-absolute top-50 start-0 translate-middle-y ms-3" style="font-size: 1.2rem; color: #6c757d;"></i>
                <label for="surname" class="visually-hidden">Surname</label>
                <InputText id="surname" class="form-control ps-5" @bind-Value="registerModel.Surname" placeholder="Surname" />
                <ValidationMessage For="@(() => registerModel.Surname)" />
            </div>

            <div class="form-group position-relative mb-3">
                <i class="bi bi-envelope position-absolute top-50 start-0 translate-middle-y ms-3" style="font-size: 1.2rem; color: #6c757d;"></i>
                <label for="email" class="visually-hidden">Email</label>
                <InputText id="email" class="form-control ps-5" @bind-Value="registerModel.Email" placeholder="Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>

            <div class="form-group position-relative mb-4">
                <i class="bi bi-lock position-absolute top-50 start-0 translate-middle-y ms-3" style="font-size: 1.2rem; color: #6c757d;"></i>
                <label for="password" class="visually-hidden">Password</label>
                <InputText id="password" type="password" class="form-control ps-5" @bind-Value="registerModel.Password" placeholder="Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Register</button>
        <p style="font-size: smaller; margin-top: 3px;">already have account? <a href="/login">login</a></p>

        </EditForm>
    </div>
</div>

@code {
    private RegisterDto registerModel = new RegisterDto();

    private async Task HandleRegister()
    {  
        var apiUrl = "http://localhost:5026/api/Auth/register"; // Verify this URL
        var response = await Http.PostAsJsonAsync(apiUrl, registerModel);

        if (response.IsSuccessStatusCode)
        {
                NavigationManager.NavigateTo($"/login");

            // Handle successful registration, e.g., redirect
        }
        else
        {
            // Handle error
        }
    }
}
